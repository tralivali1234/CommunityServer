<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ActiveProjects" xml:space="preserve">
    <value>Active projects</value>
  </data>
  <data name="ArchivedProjects" xml:space="preserve">
    <value>Archived projects</value>
  </data>
  <data name="ChooseBasecampProjects" xml:space="preserve">
    <value>choose projects from Basecamp for importing</value>
  </data>
  <data name="ChooseBasecampProjectsNote" xml:space="preserve">
    <value>Please, choose the projects to import below and click the "Import" button.</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close Window</value>
  </data>
  <data name="CommentImport" xml:space="preserve">
    <value>Imported</value>
  </data>
  <data name="CompanyURL" xml:space="preserve">
    <value>Company URL</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EmptyEmail" xml:space="preserve">
    <value>Empty Email</value>
  </data>
  <data name="EmptyPassword" xml:space="preserve">
    <value>Empty Password</value>
  </data>
  <data name="EmptyURL" xml:space="preserve">
    <value>The URL field is empty</value>
  </data>
  <data name="ExampleCompanyName" xml:space="preserve">
    <value>Example: https://basecamp.com/1234567</value>
  </data>
  <data name="FailedSaveFileMaxSizeExid" xml:space="preserve">
    <value>The size of the {0} file exceeds the maximal allowed size of {1} Mb. The file will not be loaded.</value>
  </data>
  <data name="FailedSaveFileMaxSizeExided" xml:space="preserve">
    <value>Adding the {0} file will exceed the maximum storage space allowed by your current pricing plan.</value>
  </data>
  <data name="FailedToSaveComment" xml:space="preserve">
    <value>Failed to save the "{0}" comment</value>
  </data>
  <data name="FailedToSaveFile" xml:space="preserve">
    <value>Cannot upload file {0}</value>
  </data>
  <data name="FailedToSaveMessage" xml:space="preserve">
    <value>Failed to save the "{0}" message</value>
  </data>
  <data name="FailedToSaveProject" xml:space="preserve">
    <value>Failed to save project "{0}"</value>
  </data>
  <data name="FailedToSaveTask" xml:space="preserve">
    <value>Failed to save the "{0}" task</value>
  </data>
  <data name="FailedToSaveUser" xml:space="preserve">
    <value>Failed to save user "{0}"</value>
  </data>
  <data name="Files" xml:space="preserve">
    <value>Files</value>
  </data>
  <data name="Import" xml:space="preserve">
    <value>Import</value>
  </data>
  <data name="ImportAttantionPanelAgreement" xml:space="preserve">
    <value>Yes, I understand it</value>
  </data>
  <data name="ImportAttantionPanelBody" xml:space="preserve">
    <value>All Basecamp projects will be imported to ONLYOFFICE™ as Private projects. These projects will be available to the portal administrators only. The project managers and the members of the project team will get access to the corresponding projects only.</value>
  </data>
  <data name="ImportAttantionPanelTitle" xml:space="preserve">
    <value>Warning!</value>
  </data>
  <data name="ImportClosedTasks" xml:space="preserve">
    <value>import closed tasks</value>
  </data>
  <data name="ImportCompleted" xml:space="preserve">
    <value>Importing completed</value>
  </data>
  <data name="ImportFailed" xml:space="preserve">
    <value>Error while importing</value>
  </data>
  <data name="ImportFailedMessage" xml:space="preserve">
    <value>An error occurred while importing. Please, check your account settings: email, password, account number. If you are sure that all the settings are correct, the reason can be one of the following: either your trial period has expired or the payment is overdue.</value>
  </data>
  <data name="ImportFileStarted" xml:space="preserve">
    <value>Starting import of {0} files from all projects</value>
  </data>
  <data name="ImportFromBasecamp" xml:space="preserve">
    <value>Import from Basecamp</value>
  </data>
  <data name="ImportProjectDataStarted" xml:space="preserve">
    <value>Started import of project "{0}" data</value>
  </data>
  <data name="ImportProjectStarted" xml:space="preserve">
    <value>Started import of project "{0}"</value>
  </data>
  <data name="ImportStarted" xml:space="preserve">
    <value>Import started</value>
  </data>
  <data name="InvalidCompaniUrl" xml:space="preserve">
    <value>Invalid company URL.</value>
  </data>
  <data name="InvalidEmail" xml:space="preserve">
    <value>Invalid email.</value>
  </data>
  <data name="MalformedUrl" xml:space="preserve">
    <value>The URL you entered is incorrect</value>
  </data>
  <data name="OutOfThree" xml:space="preserve">
    <value>of 3</value>
  </data>
  <data name="People" xml:space="preserve">
    <value>People</value>
  </data>
  <data name="PleaseWait" xml:space="preserve">
    <value>Please wait while the most important part is importing</value>
  </data>
  <data name="PopupPanelBody" xml:space="preserve">
    <value>It is recommended not to make any changes to your portal while{0}
                            the import is being done.{0}{0}
                            You may close this window and continue working with your ONLYOFFICE™ portal{0}
                           as soon as the import of the Files section starts.</value>
  </data>
  <data name="PopupPanelHeader" xml:space="preserve">
    <value>Importing from Basecamp</value>
  </data>
  <data name="Projects" xml:space="preserve">
    <value>Projects</value>
  </data>
  <data name="SendInvitations" xml:space="preserve">
    <value>send email invitations to ONLYOFFICE™ to all portal users</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="StartImport" xml:space="preserve">
    <value>Start Importing</value>
  </data>
  <data name="StatusAwaiting" xml:space="preserve">
    <value>awaiting</value>
  </data>
  <data name="UserPassword" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="ViewDetails" xml:space="preserve">
    <value>View Details</value>
  </data>
  <data name="ViewFiles" xml:space="preserve">
    <value>Show the Files module</value>
  </data>
</root>